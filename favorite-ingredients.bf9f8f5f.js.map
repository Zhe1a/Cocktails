{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,G,yDAA0BC,SAASC,cACvC,oDAEIC,EAAkBF,SAASC,cAC/B,uCAEIE,EAA0BH,SAASC,cACvC,gDAWEG,EAAmB,EACnBC,EAAsB,GAC1B,IACyE,IAAnEC,KAAKC,MAAMC,aAAaC,QAAQ,wBAAwBC,SAC1DL,EAAsBC,KAAKC,MACzBC,aAAaC,QAAQ,wB,CAGzB,MAAAE,GACAH,aAAaI,QACX,sBACAN,KAAKO,UAAUR,G,CAUnB,IANA,IAAIS,EAAyB,GACzBC,EAAI,EAEFC,EAAcV,KAAKC,MACvBC,aAAaC,QAAQ,wBACrBC,OACMK,EAAIC,EAAaD,GAAK,EAAG,CAK/BD,EAJ2BR,KAAKC,MAC9BC,aAAaC,QAAQ,wBAGqBM,IAC5C,EAAAlB,EAAAoB,0BACE,4DAAmFC,OAAvBJ,IAC5DK,MAAK,SAAAC,GACLhB,GAAoB,EACpB,IACiCiB,EADTD,EAAhBE,YACqC,GAAvCC,EAA2BF,EAA3BG,cAAeC,EAAYJ,EAAZK,QAChBD,IAASA,EAAU,8BACxB1B,EAAwB4B,WAAa,8LAGsBT,OADEK,EAAc,wEAIqGL,OAHrHO,EAAQ,sZAG8HP,OAAjBd,EAAiB,qEAKjM,EAAAP,EAAA+B,oBACEL,EACA,4CACA,+CACA,SACAnB,EACA,eAGsBJ,SAAS6B,iBAC/B,kDAIcC,SAAQ,SAAAC,GACtBA,EAAKC,iBAAiB,SAAS,SAAAC,GAE2C,IAAlEC,EAAmBD,EAAME,cAAclC,cAC3C,6CACAmC,YAY4B,IAVa,EAA3CvC,EAAAwC,mBACEJ,EACA,4CACA,+CACAC,EACA7B,EACA,eAKA4B,EAAMK,OAAOC,UAAUC,SACrB,8CAEF,CAEoF,IAA9EC,EAA0BR,EAAME,cACnClC,cAAc,kDACdyC,aAAa,OAGgB,EAAhC7C,EAAAoB,0BACE,4DAA6EC,OAAjBgB,IAC5Df,MAAK,SAAAwB,GACL,IAMIC,EANeD,EAMJrB,YAAY,GAAEuB,EAAzBD,EAJFE,kBAAU,IAAAD,EAAG,GAAEA,EAAAE,EAIbH,EAHFI,sBAAc,IAAAD,EAAG,GAAEA,EAAAE,EAGjBL,EAFFpB,qBAAa,IAAAyB,EAAG,GAAEA,EAAAC,EAEhBN,EADFlB,eAAO,IAAAwB,EAAG,GAAEA,GAImB,EAAjCrD,EAAAsD,wBACEjD,EACAsB,EACAwB,EACAtB,EACAoB,GAI8C,IAA1CM,EAAyBpD,SAASC,cACtC,2CAK2C,EAA7CJ,EAAA+B,oBACEJ,EACA,wCACA,2CACA,wBACApB,EACA,eAIgDgD,EAA3BpB,iBAAiB,SAAS,SAAAqB,GAC/C,IAAMC,EAAmB9B,GACzB,EAAA3B,EAAAwC,mBACEgB,EACA,wCACA,2CACAC,EACAjD,EACA,gBAG8C,EAAhDR,EAAA0D,uBACEH,EACA,6CAI2D,IAAvDI,EAAoBxD,SAASC,cACjC,IAA4BiB,OAAxBuB,IAENe,EAAkBjB,UAAUkB,OAC1B,6CAEFD,EAAkBjB,UAAUkB,OAC1B,gDAGAD,EAAkBjB,UAAUC,SAC1B,6CAGFgB,EAAkBpB,YAAc,SAEhCoB,EAAkBpB,YAAc,SAIhCgB,EAAuBb,UAAUC,SAC/B,2CAGFY,EAAuBhB,YAAc,kB,KAKzB,EAAhBvC,EAAA6D,mBACEvD,EACA,yDACAD,EACA,iDAIuD,IAAnDyD,EAA2B3D,SAASC,cACxC,2CAIF2D,OAAO5B,iBAAiB,SAAS,SAAAqB,GAE7BA,EAAMf,SAAWnC,GACjBkD,EAAMf,SAAWqB,IAEjBzD,EAAgBqC,UAAUsB,IACxB,iDAEF1D,EAAwBoC,UAAUsB,IAChC,0D","sources":["src/js/favorite-ingredients.js"],"sourcesContent":["'use strict';\nconst favoriteIngredientsList = document.querySelector(\n  '.favorite-ingredients-section__ingredients-list'\n);\nconst ingredientModal = document.querySelector(\n  '.coctails-section__ingredient-modal'\n);\nconst ingredientModalBackdrop = document.querySelector(\n  '.coctails-section__ingredient-modal-backdrop'\n);\nimport { fetchCoctailOrIngredient } from './coctails';\nimport { checkFavoriteOrNot } from './coctails';\nimport { makeFavoriteOrNot } from './coctails';\nimport { modalToggleHidden } from './coctails';\nimport { modalButtonTextChange } from './coctails';\nimport { ingredientModalMarckup } from './coctails';\n\n// import { onClick } from \"./menu-button\";\n\nlet ingredientNumber = 0;\nlet favoriteIngredients = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteIngredients')).length !== 0) {\n    favoriteIngredients = JSON.parse(\n      localStorage.getItem('favoriteIngredients')\n    );\n  }\n} catch {\n  localStorage.setItem(\n    'favoriteIngredients',\n    JSON.stringify(favoriteIngredients)\n  );\n}\n\nlet currentIngredientlName = '';\nlet i = 0;\n\nconst arrayLength = JSON.parse(\n  localStorage.getItem('favoriteIngredients')\n).length;\nfor (i; i < arrayLength; i += 1) {\n  const currentIngredients = JSON.parse(\n    localStorage.getItem('favoriteIngredients')\n  );\n\n  currentIngredientlName = currentIngredients[i];\n  fetchCoctailOrIngredient(\n    `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${currentIngredientlName}`\n  ).then(newResponse => {\n    ingredientNumber += 1;\n    const { ingredients } = newResponse;\n    let { strIngredient, strType } = ingredients[0];\n    if (!strType) strType = 'No ingredient type data :(';\n    favoriteIngredientsList.innerHTML += `<li class=\"favorite-ingredients-section__ingredient\">\n        <div class=\"favorite-ingredients-section__ingredient-card\">\n          <h3 class=\"favorite-ingredients-section__card-title\">${strIngredient}</h3>\n          <p class=\"favorite-ingredients-section__card-type\">${strType}</p>\n          <div class=\"ingredients-section__ingredient-buttons-container\">\n            <button class=\"favorite-ingredients-section__button favorite-ingredients-section__learn-button\" type=\"button\">Learn more</button>\n            <button class=\"favorite-ingredients-section__button favorite-ingredients-section__favorite-button favorite-ingredients-section__like-button\" type=\"button\" id=\"likeBtn${ingredientNumber}\">Add to</button>\n          </div>\n        </div>\n      </li>`;\n\n    checkFavoriteOrNot(\n      strIngredient,\n      'favorite-ingredients-section__like-button',\n      'favorite-ingredients-section__dislike-button',\n      'Remove',\n      ingredientNumber,\n      'Ingredients'\n    );\n    // выбираем все созданные карточки ингредиентов(вне зависимости от итерации)\n    const ingredinetCards = document.querySelectorAll(\n      '.favorite-ingredients-section__ingredient-card'\n    );\n\n    //вешаем слушателя события на все КАРТОЧКИ ингредиентов(именно на карточки)\n    ingredinetCards.forEach(elem => {\n      elem.addEventListener('click', event => {\n        //создаём переменную, которая будет содержать имя ингредиента текущей итерации цикла\n        const currentItemlName = event.currentTarget.querySelector(\n          '.favorite-ingredients-section__card-title'\n        ).textContent;\n        //добавляем/удаляем коктейль/игредиент в избранное\n        makeFavoriteOrNot(\n          event,\n          'favorite-ingredients-section__like-button',\n          'favorite-ingredients-section__dislike-button',\n          currentItemlName,\n          favoriteIngredients,\n          'Ingredients'\n        );\n\n        // при нажатии на кнопку \"узнать больше\"\n        if (\n          event.target.classList.contains(\n            'favorite-ingredients-section__learn-button'\n          )\n        ) {\n          // запоминаем айди текущей кнопки лайка, чтоб если лайк ставился на модалке - менялась кнопка на главной\n          const currentIngredientNumber = event.currentTarget\n            .querySelector('.favorite-ingredients-section__favorite-button')\n            .getAttribute('id');\n          // забираем у бекенда ингредиент, на карточке которого открывается модалка\n          // и получаем всю нужную инфу для модалки\n          fetchCoctailOrIngredient(\n            `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${currentItemlName}`\n          ).then(newResponse => {\n            const ingredient = newResponse;\n            const {\n              strAlcohol = '',\n              strDescription = '',\n              strIngredient = '',\n              strType = '',\n            } = ingredient.ingredients[0];\n\n            // создаем изначальную разметку модалки\n            ingredientModalMarckup(\n              ingredientModal,\n              strIngredient,\n              strDescription,\n              strType,\n              strAlcohol\n            );\n\n            // создаём переменную текущей кнопки \"добавить в избранное\"\n            const ingredientModalLikeBtn = document.querySelector(\n              '.ingredient-modal__like-ingredient-btn'\n            );\n\n            // проверяем находится ли ингредиент в списке избранных,\n            // меняем текст кнопки в зависимости от того есть или нет\n            checkFavoriteOrNot(\n              strIngredient,\n              'ingredient-modal__like-ingredient-btn',\n              'ingredient-modal__dislike-ingredient-btn',\n              'Remove from favorites',\n              ingredientNumber,\n              'Ingredients'\n            );\n\n            // вешаем слушателя события добавления/удаления в избранные\n            ingredientModalLikeBtn.addEventListener('click', event => {\n              const currentItemlName = strIngredient;\n              makeFavoriteOrNot(\n                event,\n                'ingredient-modal__like-ingredient-btn',\n                'ingredient-modal__dislike-ingredient-btn',\n                currentItemlName,\n                favoriteIngredients,\n                'Ingredients'\n              );\n              //меняем текст кнопки на длинный(на модалках он отличается)\n              modalButtonTextChange(\n                ingredientModalLikeBtn,\n                'favorite-ingredients-section__like-button'\n              );\n\n              // меняем так же копку добавления/удаления в избранное на главной странице\n              const currentLikeButton = document.querySelector(\n                `#${currentIngredientNumber}`\n              );\n              currentLikeButton.classList.toggle(\n                'favorite-ingredients-section__like-button'\n              );\n              currentLikeButton.classList.toggle(\n                'favorite-ingredients-section__dislike-button'\n              );\n              if (\n                currentLikeButton.classList.contains(\n                  'favorite-ingredients-section__like-button'\n                )\n              ) {\n                currentLikeButton.textContent = 'Add to';\n              } else {\n                currentLikeButton.textContent = 'Remove';\n              }\n              // меняем текст в кнопке модалки на длинный\n              if (\n                ingredientModalLikeBtn.classList.contains(\n                  'ingredient-modal__like-ingredient-btn'\n                )\n              ) {\n                ingredientModalLikeBtn.textContent = 'Add to favorite';\n              }\n            });\n\n            // открываем модалку\n            modalToggleHidden(\n              ingredientModalBackdrop,\n              'coctails-section__ingredient-modal-backdrop--is-hidden',\n              ingredientModal,\n              'coctails-section__ingredient-modal--is-hidden'\n            );\n\n            // вешаем на кнопку закрытия модалки функцию, которая закроет модалку\n            const closeIngredientlModalBtn = document.querySelector(\n              '.ingredient-modal__close-ingredient-btn'\n            );\n\n            // вешаем на бекдроп и кнопку закрытия модалки слушателя, который закроет модалку\n            window.addEventListener('click', event => {\n              if (\n                event.target === ingredientModalBackdrop ||\n                event.target === closeIngredientlModalBtn\n              ) {\n                ingredientModal.classList.add(\n                  'coctails-section__ingredient-modal--is-hidden'\n                );\n                ingredientModalBackdrop.classList.add(\n                  'coctails-section__ingredient-modal-backdrop--is-hidden'\n                );\n              }\n            });\n          });\n        }\n      });\n    });\n  });\n}\n"],"names":["$fSrKU","parcelRequire","$8c41c1e1bb95857d$var$favoriteIngredientsList","document","querySelector","$8c41c1e1bb95857d$var$ingredientModal","$8c41c1e1bb95857d$var$ingredientModalBackdrop","$8c41c1e1bb95857d$var$ingredientNumber","$8c41c1e1bb95857d$var$favoriteIngredients","JSON","parse","localStorage","getItem","length","e","setItem","stringify","$8c41c1e1bb95857d$var$currentIngredientlName","$8c41c1e1bb95857d$var$i","$8c41c1e1bb95857d$var$arrayLength","fetchCoctailOrIngredient","concat","then","newResponse1","ref1","ingredients","strIngredient1","strIngredient","strType1","strType","innerHTML","checkFavoriteOrNot","querySelectorAll","forEach","elem","addEventListener","event1","currentItemlName1","currentTarget","textContent","makeFavoriteOrNot","target","classList","contains","currentIngredientNumber","getAttribute","newResponse","ref","_strAlcohol","strAlcohol","_strDescription","strDescription","_strIngredient","_strType","ingredientModalMarckup","ingredientModalLikeBtn","event","currentItemlName","modalButtonTextChange","currentLikeButton","toggle","modalToggleHidden","closeIngredientlModalBtn","window","add"],"version":3,"file":"favorite-ingredients.bf9f8f5f.js.map"}