{"mappings":"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","sources":["src/js/coctails.js"],"sourcesContent":["'use strict';\n// РАБОЧАЯ ВЕРСИЯ\nconst coctailsList = document.querySelector('.coctails-section__coctails-list');\nconst coctailsSection = document.querySelector('.coctails-section');\nconst coctailModal = document.querySelector('.coctails-section__coctail-modal');\nconst coctailModalBackdrop = document.querySelector(\n  '.coctails-section__coctail-modal-backdrop'\n);\nconst ingredientModal = document.querySelector(\n  '.coctails-section__ingredient-modal'\n);\nconst ingredientModalBackdrop = document.querySelector(\n  '.coctails-section__ingredient-modal-backdrop'\n);\n\n// переменная для подсчета к-ва коктейлей, которые нужно отрисовать\nlet coctailsAmount = 0;\n// переменная для идентификации кнопок коктейля\nlet coctailNumber = 0;\n// переменная для определения типа добавляемого в избранное(коктейль или ингредиент)\nlet storageKey = 0;\n\nlet searchIn = 0;\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                   НАЧАЛО ФУНКЦИЙ\n\n// функция, которая считает количество коктейлей,\n// которые нужно отрисовать в зависимости от разрешения экрана\nconst getCocktailsAmount = section => {\n  if (!section) return;\n  const coctailsSectionStyles = getComputedStyle(section);\n  if (coctailsSectionStyles.width === '320px') {\n    coctailsAmount = 3;\n  } else if (coctailsSectionStyles.width === '768px') {\n    coctailsAmount = 6;\n  } else {\n    coctailsAmount = 9;\n  }\n};\n\n// функция, которая забирает у бекенда коктейли/ингредиенты по ссылке\nexport const fetchCoctailOrIngredient = async link => {\n  const response = await fetch(link);\n  const newResponse = await response.json();\n  return newResponse;\n};\n\n// функция, которая проверяет\n// находится ли коктейль или ингредиент в избранном\n// и меняет кнопку коктейля на \"добавить в избранное\" или \"убрать из избранного\"\nexport const checkFavoriteOrNot = (\n  coctailName,\n  likeBtn,\n  dislikeBtn,\n  text,\n  coctailNumber,\n  type\n) => {\n  //узнаём какой тип избранного проверяем - коктейль или ингредиент\n  let currentFuncLikeBtn = '';\n  if (type === 'Ingredients') {\n    storageKey = 1;\n  } else if (type === 'Coctails') {\n    storageKey = 0;\n  }\n  // если коктейль или игредиент находится в избранном\n  if (\n    JSON.parse(localStorage.getItem(localStorage.key(storageKey))).includes(\n      coctailName\n    )\n  ) {\n    // проверяем есть ли коктейль/ингредиент текущей итерации цикла\n    // в списке избранных\n    if (document.querySelector(`#ModalLikeIngredientBtn`)) {\n      currentFuncLikeBtn = document.querySelector(`#ModalLikeIngredientBtn`);\n    } else if (document.querySelector(`#ModalLikeCoctailBtn`)) {\n      currentFuncLikeBtn = document.querySelector(`#ModalLikeCoctailBtn`);\n    } else {\n      currentFuncLikeBtn = document.querySelector(`#likeBtn${coctailNumber}`);\n    }\n    // если есть - то меняем в разметке\n    // коктейля/ингредиента кнопку \"добавить в избранное\"\n    //на кнопку \"убрать из избранного\"\n    currentFuncLikeBtn.classList.remove(likeBtn);\n    currentFuncLikeBtn.classList.add(dislikeBtn);\n    currentFuncLikeBtn.textContent = text;\n  }\n};\n\n// функция, которая добавляет/удаляет коктейль/игредиент в избранное\n// и меняет кнопку \"добавить в избранное\" на \"удалить из избранного\" и наоборот\nexport const makeFavoriteOrNot = (\n  event,\n  likeButton,\n  dislikeButton,\n  currentItemlName,\n  typeOfFavorites,\n  type\n) => {\n  //проверяем обрабатывается коктейль или ингредиент\n  if (type === 'Ingredients') {\n    storageKey = 1;\n  } else if (type === 'Coctails') {\n    storageKey = 0;\n  }\n  // если событие словилось на кнопке \"добавить в избранное\",\n  // то добавляем в память массив с названиями избранных коктейлей/ингредиентов\n  // и меняем кнопку на \"убрать из избранного\"\n  if (event.target.classList.contains(likeButton)) {\n    event.target.textContent = 'Remove';\n    typeOfFavorites.push(currentItemlName);\n    localStorage.setItem(\n      localStorage.key(storageKey),\n      JSON.stringify(typeOfFavorites)\n    );\n    event.target.classList.toggle(dislikeButton);\n    event.target.classList.toggle(likeButton);\n    // если событие словилось на кнопке \"убрать из избранного\",\n    // то добавляем в память массив с названиями избранных коктейлей/ингредиентов,\n    // из которых предварительно удаляем текущий коктейль/ингредиент\n    // и меняем кнопку на \"добавить в избранное\"\n  } else if (event.target.classList.contains(dislikeButton)) {\n    event.target.textContent = 'Add to';\n    typeOfFavorites.splice(typeOfFavorites.indexOf(currentItemlName), 1);\n    localStorage.setItem(\n      localStorage.key(storageKey),\n      JSON.stringify(typeOfFavorites)\n    );\n    // переключаем кнопки \"добавить в избранное\" и \"удалить из избранного\"\n    event.target.classList.toggle(dislikeButton);\n    event.target.classList.toggle(likeButton);\n  }\n};\n\n// функция открытия/закрытия модалки\nexport const modalToggleHidden = (\n  backdropName,\n  backdropClass,\n  modalName,\n  modalClass\n) => {\n  backdropName.classList.toggle(backdropClass);\n  modalName.classList.toggle(modalClass);\n};\n\n// функция создания списка ингредиентов\nconst createIngredients = coctail => {\n  const ingredientsList = document.querySelector('.coctail-modal__list');\n  for (const key in coctail) {\n    if (key.includes('strIngredient') && coctail[key] !== null) {\n      ingredientsList.innerHTML += `<li class =\"coctail-modal__list-item\"><button class=\"coctail-modal__ingredient\" type=\"button\">✶ ${coctail[key]}</button></li>`;\n    }\n  }\n};\n\n// функция изменения текста кнопок модалки(он отличается от того, что на главной странице)\nexport const modalButtonTextChange = (button, buttonClass) => {\n  if (button.classList.contains(buttonClass)) {\n    button.textContent = 'Add to favorite';\n  } else {\n    button.textContent = 'Remove from favorite';\n  }\n};\n\n// функция добавляет разметку карточки коктейля из текущей итерации цикла\n//с кнопкой \"добавить в избранное\"\nconst coctailCardMarkup = (\n  markupPlace = '',\n  cocktailName = '',\n  cocktailImgLink = ''\n) => {\n  markupPlace.innerHTML += `<li class='coctails-section__coctail'>\n            <div class='coctails-section__coctail-container'>\n                <img class='coctails-section__coctail-img' srcset=\"${cocktailImgLink}\" alt=\"${cocktailName}\">\n                <h3 class='coctails-section__coctail-name'>${cocktailName}</h3>\n                <div class=\"coctails-section__coctail-buttons-container\">\n                    <button class=\"coctails-section__button coctails-section__learn-button\" type=\"button\">Learn more</button>\n                    <button class=\"coctails-section__button coctails-section__favorite-button coctails-section__like-button\" type=\"button\" id=\"likeBtn${coctailNumber}\">Add to</button>\n                </div>\n            </div>\n        </li>`;\n};\n\n// функция разметки модалки коктейля\nconst coctailModalMarckup = (\n  marckupPlace,\n  coctailName,\n  coctailImgLink,\n  coctailInstructions\n) => {\n  if (getComputedStyle(coctailsSection).width === '320px') {\n    marckupPlace.innerHTML = `<h3 class = \"coctail-modal__coctail-name\" >${coctailName}</h3>\n                  <h4 class = \"coctail-modal__coctail-description\">Instructions:</h4>\n                  <p class = \"coctail-modal__coctail-instruction\">${coctailInstructions}</p>\n                  <img class='coctails-section__coctail-img' src=\"${coctailImgLink}\" alt=\"${coctailName}\">\n                  <h4 class = \"coctail-modal__coctail-bottom-description\">Ingredients</h4>\n                  <p class = \"coctail-modal__per-class-text\">Per cocktail</p>\n                  <ul class = \"coctail-modal__list\">\n                  </ul>\n                  <button class = \"coctail-modal__like-coctail-btn\" type=\"button\" id=\"ModalLikeCoctailBtn\">Add to favorite</button>\n                  <button class = \"coctail-modal__close-modal-btn\" type=\"button\"></button>`;\n  } else {\n    marckupPlace.innerHTML = `\n                  <div  class = \"coctail-modal__flex-container\">\n                  <img class='coctails-section__coctail-img coctail-modal__img' src=\"${coctailImgLink}\" alt=\"${coctailName}\">\n                  <div class = \"coctail-modal__top-container\">\n                    <h3 class = \"coctail-modal__coctail-name\" >${coctailName}</h3>\n                    <h4 class = \"coctail-modal__coctail-bottom-description\">Ingredients</h4>\n                    <p class = \"coctail-modal__per-class-text\">Per cocktail</p>\n                    <ul class = \"coctail-modal__list\"></ul>\n                  </div>\n                  </div>\n                  <h4 class = \"coctail-modal__coctail-description\">Instructions:</h4>\n                  <p class = \"coctail-modal__coctail-instruction\">${coctailInstructions}</p>\n                  <button class = \"coctail-modal__like-coctail-btn\" type=\"button\" id=\"ModalLikeCoctailBtn\">Add to favorite</button>\n                  <button class = \"coctail-modal__close-modal-btn\" type=\"button\"></button>`;\n  }\n};\n\n// функция разметки модалки ингредиента\nexport const ingredientModalMarckup = (\n  marckupPlace,\n  ingName,\n  ingDescription,\n  ingType,\n  ingAlcohol\n) => {\n  if (!ingDescription) ingDescription = 'sorry, we have no data :(';\n  if (!ingType) ingType = 'sorry, we have no data :(';\n  if (!ingAlcohol) ingAlcohol = 'sorry, we have no data :(';\n  marckupPlace.innerHTML = `<h3 class = \"coctail-modal__coctail-name\">${ingName}</h3>\n                        <div class= \"ingredient-modal__border-box\"><p class = \"coctail-modal__coctail-instruction\">${ingDescription}</p></div>\n                        <ul class = \"coctail-modal__list\">\n                          <li class = \"coctail-modal__list-item\"><p class = \"coctail-modal__ingredient\">Type: ${ingType}</p></li>\n                          <li class = \"coctail-modal__list-item\"><p  class = \"coctail-modal__ingredient\">Alkoholic? - ${ingAlcohol}</p></li>\n                        </ul>\n                        <button class = \"ingredient-modal__like-ingredient-btn\" type=\"button\" id=\"ModalLikeIngredientBtn\">Add to favorite</button>\n                        <button class = \"ingredient-modal__close-ingredient-btn\" type=\"button\"></button>\n                        `;\n};\n//                   КОНЕЦ ФУНКЦИЙ\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                   НАЧАЛО ДВИЖУХИ\n\n// проверяем есть ли в памяти коктейли\nlet favoriteCoctails = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteCoctails')).length !== 0) {\n    favoriteCoctails = JSON.parse(localStorage.getItem('favoriteCoctails'));\n  }\n} catch {\n  localStorage.setItem('favoriteCoctails', JSON.stringify(favoriteCoctails));\n}\n\n// проверяем есть ли в памяти ингредиенты\nlet favoriteIngredients = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteIngredients')).length !== 0) {\n    favoriteIngredients = JSON.parse(\n      localStorage.getItem('favoriteIngredients')\n    );\n  }\n} catch {\n  localStorage.setItem(\n    'favoriteIngredients',\n    JSON.stringify(favoriteIngredients)\n  );\n}\n\n// определяем сколько карточек нужно отрисовать\ngetCocktailsAmount(coctailsSection);\n\n// дальше черная магия.\n// цикл делает столько итераций, сколько нужно отрисовать коктейлей\n//////////////////////////////////////////////////////////////////////////////////\n// НАЧАЛО ЦИКЛА\nexport default function mainFunction(\n  searchIn,\n  searchLink,\n  amount,\n  mainMarkupPlace\n) {\n  if (!mainMarkupPlace) return;\n  if (searchIn < 2 && mainMarkupPlace) {\n    mainMarkupPlace.innerHTML = '';\n  }\n\n  for (let iteration = 0; iteration < amount; iteration += 1) {\n    // забираем у бекенда рандомный коктейль\n    fetchCoctailOrIngredient(searchLink)\n      .then(newResponse => {\n        if (searchIn === 1) {\n          fetchCoctailOrIngredient(searchLink).then(newResponse => {\n            coctailsAmount = newResponse.drinks.length;\n          });\n        }\n\n        // увеличиваем счетчик коклейлей на 1\n        coctailNumber += 1;\n        let coctailIterationNumber = 0;\n\n        if (searchIn) {\n          coctailIterationNumber = iteration;\n        }\n        const { strDrinkThumb = '', strDrink = '' } =\n          newResponse.drinks[coctailIterationNumber];\n\n        // создаем разметку карточки\n        coctailCardMarkup(mainMarkupPlace, strDrink, strDrinkThumb);\n\n        // проверяем находится ли коктейль или ингредиент в избранном\n        checkFavoriteOrNot(\n          strDrink,\n          'coctails-section__like-button',\n          'coctails-section__dislike-button',\n          'Remove',\n          coctailNumber,\n          'Coctails'\n        );\n\n        // выбираем все созданные карточки коктейлей(вне зависимости от итерации)\n        const coctailCards = document.querySelectorAll(\n          '.coctails-section__coctail-container'\n        );\n\n        //вешаем слушателя события на все КАРТОЧКИ коктейлей(именно на карточки)\n        coctailCards.forEach(elem => {\n          elem.addEventListener('click', event => {\n            //создаём переменную, которая будет содержать имя коктейля текущей итерации цикла\n            const currentItemlName = event.currentTarget.querySelector(\n              '.coctails-section__coctail-name'\n            ).textContent;\n            //добавляем/удаляем коктейль/игредиент в избранное\n            makeFavoriteOrNot(\n              event,\n              'coctails-section__like-button',\n              'coctails-section__dislike-button',\n              currentItemlName,\n              favoriteCoctails,\n              'Coctails'\n            );\n\n            // при нажатии на кнопку \"узнать больше\" на коктейле\n            if (\n              event.target.classList.contains('coctails-section__learn-button')\n            ) {\n              // запоминаем айди текущей кнопки лайка, чтоб если лайк ставился на модалке - менялась кнопка на главной\n              const currentCoctailNumber = event.currentTarget\n                .querySelector('.coctails-section__favorite-button')\n                .getAttribute('id');\n\n              // забираем у бекенда коктейль, на карточке которого открывается модалка\n              // и получаем всю нужную инфу для модалки\n              fetchCoctailOrIngredient(\n                `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${currentItemlName}`\n              ).then(newResponse => {\n                const coctail = newResponse;\n\n                const {\n                  strDrinkThumb = '',\n                  strDrink = '',\n                  strInstructions = '',\n                } = coctail.drinks[0];\n\n                // создаем изначальную разметку модалки\n                if (coctailModal) {\n                  coctailModalMarckup(\n                    coctailModal,\n                    strDrink,\n                    strDrinkThumb,\n                    strInstructions\n                  );\n                }\n\n                // создаём переменную текущей кнопки \"добавить в избранное\"\n                const modalLikeBtn = document.querySelector(\n                  '.coctail-modal__like-coctail-btn'\n                );\n\n                // проверяем находится ли коктейль в списке избранных,\n                // меняем текст кнопки в зависимости от того есть или нет\n                checkFavoriteOrNot(\n                  strDrink,\n                  'coctail-modal__like-coctail-btn',\n                  'coctail-modal__dislike-coctail-btn',\n                  'Remove from favorites',\n                  coctailNumber,\n                  'Coctails'\n                );\n\n                // вешаем слушателя события добавления/удаления в избранные\n                modalLikeBtn.addEventListener('click', event => {\n                  makeFavoriteOrNot(\n                    event,\n                    'coctail-modal__like-coctail-btn',\n                    'coctail-modal__dislike-coctail-btn',\n                    currentItemlName,\n                    favoriteCoctails,\n                    'Coctails'\n                  );\n                  //меняем текст кнопки на длинный(на модалках он отличается)\n                  modalButtonTextChange(\n                    modalLikeBtn,\n                    'coctail-modal__like-coctail-btn'\n                  );\n                  // меняем так же копку добавления/удаления в избранное на главной странице\n                  const currentLikeButton = document.querySelector(\n                    `#${currentCoctailNumber}`\n                  );\n                  currentLikeButton.classList.toggle(\n                    'coctails-section__like-button'\n                  );\n                  currentLikeButton.classList.toggle(\n                    'coctails-section__dislike-button'\n                  );\n                  if (\n                    currentLikeButton.classList.contains(\n                      'coctails-section__like-button'\n                    )\n                  ) {\n                    currentLikeButton.textContent = 'Add to';\n                  } else {\n                    currentLikeButton.textContent = 'Remove';\n                  }\n                });\n\n                // открываем модалку\n                modalToggleHidden(\n                  coctailModalBackdrop,\n                  'coctails-section__coctail-modal-backdrop--is-hidden',\n                  coctailModal,\n                  'coctails-section__coctail-modal--is-hidden'\n                );\n\n                // делаем переменную кнопки закрытия модалки\n                const closeCoctailModalBtn = document.querySelector(\n                  '.coctail-modal__close-modal-btn'\n                );\n\n                // вешаем на бекдроп и кнопку закрытия модалки слушателя, который закроет модалку\n                window.addEventListener('click', event => {\n                  if (\n                    event.target === coctailModalBackdrop ||\n                    event.target === closeCoctailModalBtn\n                  ) {\n                    coctailModal.classList.add(\n                      'coctails-section__coctail-modal--is-hidden'\n                    );\n                    coctailModalBackdrop.classList.add(\n                      'coctails-section__coctail-modal-backdrop--is-hidden'\n                    );\n                  }\n                });\n\n                // создаем список ингредиентов\n                createIngredients(coctail.drinks[0]);\n                const modalIngredients = document.querySelectorAll(\n                  '.coctail-modal__ingredient'\n                );\n\n                // при клике на ингредиент\n                // забираем у бекенда его данные по его имени и создаем модалку\n                modalIngredients.forEach(elem => {\n                  elem.addEventListener('click', event => {\n                    const currentingredientName =\n                      event.target.innerText.slice(2);\n                    currentingredientName;\n                    fetchCoctailOrIngredient(\n                      `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${currentingredientName}`\n                    )\n                      .then(newResponse => {\n                        const {\n                          strAlcohol = '',\n                          strDescription = '',\n                          strIngredient = '',\n                          strType = '',\n                        } = newResponse.ingredients[0];\n\n                        // создаем изначальную разметку модалки ингредиента\n                        ingredientModalMarckup(\n                          ingredientModal,\n                          strIngredient,\n                          strDescription,\n                          strType,\n                          strAlcohol\n                        );\n\n                        // создаём переменную кнопки \"добавить в избранное\" модалки ингредиента\n                        const ingredientModalLikeBtn = document.querySelector(\n                          '.ingredient-modal__like-ingredient-btn'\n                        );\n\n                        // проверяем есть ли ингредиент в избранном\n                        checkFavoriteOrNot(\n                          strIngredient,\n                          'ingredient-modal__like-ingredient-btn',\n                          'ingredient-modal__dislike-ingredient-btn',\n                          'Remove from favorites',\n                          coctailNumber,\n                          'Ingredients'\n                        );\n\n                        // вешаем на кнопку \"добавить в избранное\" модалки ингредиента\n                        // функцию добавления/удаления в избранное\n                        ingredientModalLikeBtn.addEventListener(\n                          'click',\n                          event => {\n                            const currentItemlName = strIngredient;\n                            makeFavoriteOrNot(\n                              event,\n                              'ingredient-modal__like-ingredient-btn',\n                              'ingredient-modal__dislike-ingredient-btn',\n                              currentItemlName,\n                              favoriteIngredients,\n                              'Ingredients'\n                            );\n                            //меняем текст кнопки на длинный(на модалках он отличается)\n                            modalButtonTextChange(\n                              ingredientModalLikeBtn,\n                              'ingredient-modal__like-ingredient-btn'\n                            );\n                          }\n                        );\n\n                        // делаем переменную кнопки закрытия модалки ингредиента\n                        const closeIngredientlModalBtn = document.querySelector(\n                          '.ingredient-modal__close-ingredient-btn'\n                        );\n\n                        // открываем модалку\n                        modalToggleHidden(\n                          ingredientModalBackdrop,\n                          'coctails-section__ingredient-modal-backdrop--is-hidden',\n                          ingredientModal,\n                          'coctails-section__ingredient-modal--is-hidden'\n                        );\n\n                        // вешаем на бекдроп и кнопку закрытия модалки слушателя, который закроет модалку\n                        window.addEventListener('click', event => {\n                          if (\n                            event.target === ingredientModalBackdrop ||\n                            event.target === closeIngredientlModalBtn\n                          ) {\n                            ingredientModal.classList.add(\n                              'coctails-section__ingredient-modal--is-hidden'\n                            );\n                            ingredientModalBackdrop.classList.add(\n                              'coctails-section__ingredient-modal-backdrop--is-hidden'\n                            );\n                          }\n                        });\n                      })\n                      .catch(alert.log);\n                  });\n                });\n              });\n            }\n          });\n        });\n      })\n      .catch(console.log);\n  }\n}\nmainFunction(\n  0,\n  'https://www.thecocktaildb.com/api/json/v1/1/random.php',\n  coctailsAmount,\n  coctailsList\n);\n\n// КОНЕЦ ЦИКЛА\n// СПАСИБО ЗА ВНИМАНИЕ :)\n"],"names":["$a2ad4550b2df6780$var$coctailsList","document","querySelector","$a2ad4550b2df6780$var$coctailsSection","$a2ad4550b2df6780$var$coctailModal","$a2ad4550b2df6780$var$coctailModalBackdrop","$a2ad4550b2df6780$var$ingredientModal","$a2ad4550b2df6780$var$ingredientModalBackdrop","$a2ad4550b2df6780$var$coctailsAmount","$a2ad4550b2df6780$var$coctailNumber","$a2ad4550b2df6780$var$storageKey","$a2ad4550b2df6780$export$422f9a0bc63ac997","async","link","response","fetch","json","$a2ad4550b2df6780$export$580a95f967d7fd0b","coctailName","likeBtn","dislikeBtn","text","coctailNumber1","type","currentFuncLikeBtn","JSON","parse","localStorage","getItem","key","includes","classList","remove","add","textContent","$a2ad4550b2df6780$export$37a2f929d3644c","event","likeButton","dislikeButton","currentItemlName","typeOfFavorites","target","contains","push","setItem","stringify","toggle","splice","indexOf","$a2ad4550b2df6780$export$ae080cb0d94c843c","backdropName","backdropClass","modalName","modalClass","$a2ad4550b2df6780$var$createIngredients","coctail","ingredientsList","innerHTML","$a2ad4550b2df6780$export$50228975d1f17fe4","button","buttonClass","$a2ad4550b2df6780$var$coctailCardMarkup","markupPlace","cocktailName","cocktailImgLink","$a2ad4550b2df6780$export$b305e1460e0842e1","marckupPlace","ingName","ingDescription","ingType","ingAlcohol","$a2ad4550b2df6780$var$favoriteCoctails","length","$a2ad4550b2df6780$var$favoriteIngredients","$a2ad4550b2df6780$export$2e2bcd8739ae039","searchIn1","searchLink","amount","mainMarkupPlace","iteration","then","newResponse1","newResponse","drinks","coctailIterationNumber","strDrinkThumb","strDrinkThumb1","strDrink","strDrink1","querySelectorAll","forEach","elem1","addEventListener","event1","currentItemlName1","currentTarget","currentCoctailNumber","getAttribute","newResponse2","strInstructions","coctailImgLink","coctailInstructions","getComputedStyle","width","modalLikeBtn","currentLikeButton","closeCoctailModalBtn","window","elem","event2","currentingredientName","innerText","slice","strAlcohol","strDescription","strIngredient","strType","ingredients","ingredientModalLikeBtn","closeIngredientlModalBtn","catch","alert","log","console","section","coctailsSectionStyles","$a2ad4550b2df6780$var$getCocktailsAmount"],"version":3,"file":"favorite-ingredients.5b255462.js.map"}